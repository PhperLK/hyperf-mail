<?php

declare(strict_types=1);
/**
 * This file is part of Hyperf.
 *
 * @link     https://www.hyperf.io
 * @document https://hyperf.wiki
 * @contact  group@hyperf.io
 * @license  https://github.com/hyperf/hyperf/blob/master/LICENSE
 */
namespace App\Model;

use App\Utils\SessionUtil;
use Hyperf\Database\Model\Concerns\CamelCase;
use Hyperf\Database\Model\Events\Saving;
use Hyperf\Database\Model\SoftDeletes;
use Hyperf\DbConnection\Model\Model as BaseModel;
use Hyperf\ModelCache\Cacheable;
use Hyperf\ModelCache\CacheableInterface;

abstract class Model extends BaseModel implements CacheableInterface
{
    use Cacheable;
    use CamelCase;
    use SoftDeletes;

    protected bool $searchStore = true;

    protected $hidden = ['store_id'];

    public function newModelBuilder($query)
    {
        if ($this->searchStore == true) {
            $query->where($this->getTable().'.store_id', SessionUtil::getStoreId());
        }
        return parent::newModelBuilder($query); // TODO: Change the autogenerated stub
    }

    public function saving(Saving $event)
    {
        if ($this->hasCast('store_id')) {
            $this->storeId = SessionUtil::getStoreId();
        }
    }

}
